// Code generated by Clue Mock Generator v0.17.1, DO NOT EDIT.
//
// Command:
// $ cmg gen goa.design/pulse/examples/weather/services/poller/clients/weathergov

package mockweathergov

import (
	"context"
	"testing"

	"goa.design/clue/mock"

	"goa.design/pulse/examples/weather/services/poller/clients/weathergov"
)

type (
	Client struct {
		m *mock.Mock
		t *testing.T
	}

	ClientGetForecastFunc func(ctx context.Context, lat, long float64) (*weathergov.Forecast, error)
	ClientNameFunc        func() string
	ClientPingFunc        func(ctx context.Context) error
)

func NewClient(t *testing.T) *Client {
	var (
		m                   = &Client{mock.New(), t}
		_ weathergov.Client = m
	)
	return m
}

func (m *Client) AddGetForecast(f ClientGetForecastFunc) {
	m.m.Add("GetForecast", f)
}

func (m *Client) SetGetForecast(f ClientGetForecastFunc) {
	m.m.Set("GetForecast", f)
}

func (m *Client) GetForecast(ctx context.Context, lat, long float64) (*weathergov.Forecast, error) {
	if f := m.m.Next("GetForecast"); f != nil {
		return f.(ClientGetForecastFunc)(ctx, lat, long)
	}
	m.t.Helper()
	m.t.Error("unexpected GetForecast call")
	return nil, nil
}

func (m *Client) AddName(f ClientNameFunc) {
	m.m.Add("Name", f)
}

func (m *Client) SetName(f ClientNameFunc) {
	m.m.Set("Name", f)
}

func (m *Client) Name() string {
	if f := m.m.Next("Name"); f != nil {
		return f.(ClientNameFunc)()
	}
	m.t.Helper()
	m.t.Error("unexpected Name call")
	return ""
}

func (m *Client) AddPing(f ClientPingFunc) {
	m.m.Add("Ping", f)
}

func (m *Client) SetPing(f ClientPingFunc) {
	m.m.Set("Ping", f)
}

func (m *Client) Ping(ctx context.Context) error {
	if f := m.m.Next("Ping"); f != nil {
		return f.(ClientPingFunc)(ctx)
	}
	m.t.Helper()
	m.t.Error("unexpected Ping call")
	return nil
}

func (m *Client) HasMore() bool {
	return m.m.HasMore()
}
