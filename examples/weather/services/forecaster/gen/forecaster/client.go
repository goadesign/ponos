// Code generated by goa v3.16.1, DO NOT EDIT.
//
// Forecaster client
//
// Command:
// $ goa gen goa.design/pulse/examples/weather/services/forecaster/design -o
// services/forecaster

package forecaster

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Forecaster" service client.
type Client struct {
	ForecastEndpoint goa.Endpoint
}

// NewClient initializes a "Forecaster" service client given the endpoints.
func NewClient(forecast goa.Endpoint) *Client {
	return &Client{
		ForecastEndpoint: forecast,
	}
}

// Forecast calls the "forecast" endpoint of the "Forecaster" service.
// Forecast may return the following errors:
//   - "timeout" (type *goa.ServiceError): Timeout retrieving forecast
//   - error: internal error
func (c *Client) Forecast(ctx context.Context, p *ForecastPayload) (res *Forecast2, err error) {
	var ires any
	ires, err = c.ForecastEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Forecast2), nil
}
